{"version":3,"file":"static/js/882.c86bdb40.chunk.js","mappings":"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","sources":["redux/contacts/selectors.jsx","components/Contacts/Contacts.styled.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Input/Input.styled.jsx","components/Input/Input.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectError = state => state.contacts.error;\nexport const selectFilterValue = state => state.filter.value;\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\n\n\nexport const selectVisibleContacts = createSelector([\n    selectContacts,\n    selectFilterValue,\n  ], (contacts, filters) => contacts.filter(item=>item.name.toLowerCase().includes(filters.toLowerCase()))\n  );","import styled from \"styled-components\";\n\nexport const ContactLi = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n\n  p {\n    margin-right: 5px;\n  }\n\n  button {\n    width: 150px;\n    cursor: pointer;\n    background-color: #8ac2dc;\n    border-radius: 5px;\n    border: none;\n    box-shadow: 0 1px 7px grey;\n    &:hover {\n        background-color: #12628d;\n        color: #aee7e7;\n        transform: scale(1.1);\n    }\n  }\n`;\n\nexport const ContactsUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  outline: 1px solid grey;\n  border-radius: 20px;\n  background-color: #ccf4f2;\n  padding: 10px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\n\nimport { selectVisibleContacts, selectIsLoading } from '../../redux/contacts/selectors';\nimport { ContactsUl, ContactLi } from './Contacts.styled';\n\nexport const Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const filteredContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <div>\n      {isLoading ? (\n        <p>Будь ласка зачекайте...</p>\n      ) : (\n        <ContactsUl>\n          {filteredContacts.map(element => (\n            <ContactLi key={element.id}>\n              <p>{element.name}: {element.number}</p>\n              <button\n                type=\"button\"\n                onClick={() => dispatch(deleteContact(element.id))}\n              > Видалити\n              </button>\n            </ContactLi>\n          ))}\n        </ContactsUl>\n      )}\n    </div>\n  );\n};","import styled from 'styled-components';\n\nexport const Input = styled.input`\n\n  max-width: 450px;\n  padding: 10px;\n\n  border-radius: 8px;\n  border: 2px solid #badbe7;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport { Input } from \"./Filter.styled\";\nimport { setFilter } from '../../redux/contacts/filterSlice';\nimport { selectFilterValue } from \"../../redux/contacts/selectors\";\n\n\nexport function Filter() {\n  const dispatch = useDispatch();\n    const filter = useSelector(selectFilterValue);\n\n  return (\n    <> <h3>Шукати по ніку користувача</h3><Input  type=\"text\"  value={filter} onChange={evt => dispatch(setFilter(evt.target.value))} /></>\n  );\n}","import styled from 'styled-components';\nimport { Form } from 'formik';\n\nexport const Formikk = styled(Form)`\n   display: flex;\n  flex-direction: column;\n  width: 700px;\n  padding: 5px;\n  outline: 1px solid grey;\n  border-radius: 20px;\n  background-color: #97cedd;\n  margin: 0 auto;\n  label {\n    display: flex;\n  flex-direction: column;\n  margin-bottom: 15px;\n  font-size: 15px;\n  }\n  input {\n    padding: 6px 13px;\n  border-radius: 40px;\n  font: inherit;\n  }\n  button {\n    width: 79px;\n  padding: 3px;\n  cursor: pointer;\n  border-radius: 10px;\n  border: none;\n  box-shadow: 0 1px 7px grey;\n  background-color: #a2cae2;\n  margin-right: 4px;\n  box-shadow: 0 1px 7px grey;\n\n  &:hover,\n  &:focus {\n    background-color: #6787a1;\n    color: #bde6e6;\n    transform: scale(1.1);\n    }\n  }\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { addContact } from '../../redux/contacts/operations';\n\nimport { Field, ErrorMessage, Formik } from 'formik';\nimport { Formikk } from './Input.styled';\nimport * as Yup from 'yup';\n\nconst NameInputSchema = Yup.object().shape({\n  name: Yup.string().min(2, 'Дуже коротке!').required('Занято'),\n  number: Yup.string()\n    .matches(/^\\+[1-9]\\d{1,14}$/, 'Невірний номер телефону')\n    .required('Повинно бути філд'),\n});\nexport const NameInput = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const addNewContact = newContact => {\n    const hasContact = contacts.some(\n      contact => contact.name === newContact.name\n    );\n    if (hasContact) {\n      alert('A contact with that name already exists');\n      return;\n    }\n    dispatch(addContact(newContact));\n  };\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={NameInputSchema}\n      onSubmit={(values, actions) => {\n        addNewContact(values);\n        actions.resetForm();\n      }}\n    >\n      <Formikk>\n        <label>\n          Ім'я\n          <Field type=\"text\" name=\"name\" placeholder=\" Name\" />\n          <ErrorMessage name=\"name\" />\n        </label>\n        <label>\n          Номер\n          <Field type=\"tel\" name=\"number\" placeholder=\" + Number\" />\n          <ErrorMessage name=\"number\" />\n        </label>\n        <button type=\"submit\">Додати контакт</button>\n      </Formikk>\n    </Formik>\n  );\n};","import { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { Container } from 'components/GlobalStyle';\nimport { Contacts } from 'components/Contacts/Contacts';\nimport { Filter } from 'components/Filter/Filter';\nimport { NameInput } from 'components/Input/Input';\nimport { Helmet } from 'react-helmet';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <h1>Phonebook</h1>\n      <NameInput />\n      <h2>Contacts</h2>\n      <Filter />\n      <Contacts />\n    </Container>\n  );\n};\n\nexport default ContactsPage;"],"names":["selectFilterValue","state","filter","value","selectContacts","contacts","items","selectIsLoading","isLoading","selectVisibleContacts","createSelector","filters","item","name","toLowerCase","includes","ContactLi","styled","_templateObject","_taggedTemplateLiteral","ContactsUl","_templateObject2","Contacts","dispatch","useDispatch","useSelector","filteredContacts","_jsx","children","map","element","_jsxs","number","type","onClick","deleteContact","id","Input","Filter","_Fragment","onChange","evt","setFilter","target","Formikk","Form","NameInputSchema","Yup","shape","min","required","matches","NameInput","Formik","initialValues","validationSchema","onSubmit","values","actions","newContact","some","contact","alert","addContact","resetForm","Field","placeholder","ErrorMessage","useEffect","fetchContacts","Container","Helmet"],"sourceRoot":""}